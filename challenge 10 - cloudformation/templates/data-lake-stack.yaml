AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template to create a Data Lake environment (S3 + EC2)

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where resources will be deployed

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID for the EC2 instance

Resources:
  # Security Group for EC2
  DataLakeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # S3 bucket (unique name)
  DataLakeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub datalake-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled

  # EC2 instance (Free Tier)
  DataLakeInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      # Amazon Linux 2 official Free Tier
      ImageId: ami-0c02fb55956c7d316
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref DataLakeSecurityGroup
      KeyName: datalake-keypair
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y aws-cli
          echo "Data Lake EC2 instance ready" > /var/www/html/index.html

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref DataLakeBucket

  EC2PublicIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt DataLakeInstance.PublicIp

  SecurityGroupId:
    Description: ID of the created Security Group
    Value: !Ref DataLakeSecurityGroup